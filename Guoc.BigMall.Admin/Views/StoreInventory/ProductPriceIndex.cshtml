@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- demo root element -->
<div id="app">
    <div class="box box-primary">
        <div class="box-header">
            <ol class="breadcrumb" style="padding:0px;margin:1px;">
                <li><a href="/StoreInventory/ProductPriceIndex"><i class="fa fa-dashboard"></i>商品售价查询</a></li>
            </ol>
        </div>
        <div class="box-body">

            <div class="row" style="margin-bottom:10px;" slot="customSearch">
                <div class="col-xs-3 col-sm-2">
                    <el-input v-model="table.args.productCode" placeholder="商品编码" clearable></el-input>
                </div>

                <div class="col-xs-3 col-sm-2">
                    <el-input v-model="table.args.productName" placeholder="商品名" clearable></el-input>
                </div>
                <div class="col-xs-3 col-sm-2">
                    <store-selector v-model="table.args.StoreId" placeholder="门店" v-bind:multiselect="true"></store-selector>
                </div>
                <div class="form-group col-sm-2 col-xs-3" style="padding-right:0px;">
                    <div class="input-group">
                        <span class="input-group-addon">库存数量</span>
                        <el-select name="mark" v-model="table.args.mark" clearable>
                            <el-option value=">">大于</el-option>
                            <el-option value=">=">大于等于</el-option>
                            <el-option value="<">小于</el-option>
                            <el-option value="<=">小于等于</el-option>
                        </el-select>
                    </div>
                </div>
                <div class="col-xs-3 col-sm-1" style="padding-left:0px;">
                    @*<input class="form-control" v-model="table.args.quantity" placeholder="" debounce="500" />*@
                    <el-input-number v-model="table.args.quantity" v-bind:precision="0" v-bind:min="0" v-bind:max="999999"></el-input-number>
                </div>
                <div class="form-group  col-xs-3 col-sm-2">
                    <brand-selector v-model="checkBrandIds" placeholder="品牌" ref="brandtable"></brand-selector>
                </div>
                <div class="form-group col-xs-3 col-sm-2">
                    <category-selector v-model="table.args.categoryId" v-on:value-changed="onSelectCategory" placeholder="品类"></category-selector>
                </div>
            </div>


            <el-row class="row-bottom">
                <el-col v-bind:sm="12" v-bind:md="12">
                    <span class="input-group-btn">
                        <el-button type="primary" class="btn btn-flat" v-on:click="loadData">查询</el-button>
                        <el-button class="btn btn-flat" v-on:click="clearQuery">清除条件</el-button>
                        <el-button type="success" class="btn btn-flat" v-on:click="Down">导出Excel</el-button>
                    </span>
                </el-col>
            </el-row>

            <el-row>
                <el-col v-bind:span="24">
                    <el-table class="form-group" ref="$table" v-bind:data="table.rows" border style="width: 100%" v-bind:height="table.height">

                        <el-table-column type="index"></el-table-column>
                        <el-table-column prop="StoreName" label="门店" width="180"></el-table-column>
                        <el-table-column prop="ProductCode" label="商品编码" width="120"></el-table-column>
                        <el-table-column prop="ProductName" label="商品名称" width="260"></el-table-column>
                        <el-table-column prop="CategoryName" label="品类" width="200"></el-table-column>
                        <el-table-column prop="BrandName" label="品牌" width="100"></el-table-column>
                        <el-table-column prop="Specification" label="规格" width="200"></el-table-column>
                        <el-table-column prop="SalePrice" label="售价" width="100" sortable></el-table-column>
                        <el-table-column prop="MinSalePrice" label="限价" width="100" sortable></el-table-column>
                        <el-table-column prop="Quantity" label="库存数" width="100" sortable></el-table-column>
                    </el-table>
                    <el-pagination v-bind:current-page="table.page.pageIndex" v-bind:page-size="table.page.pageSize" v-bind:total="table.page.total"
                                   layout="total,sizes,prev,pager,next,jumper"
                                   v-on:size-change="onPageSizeChange" v-on:current-change="onPageChange" background>

                    </el-pagination>
                </el-col>
            </el-row>


        </div>
        <!-- /.box-body -->
    </div>
    <div class="clearfix"></div>

</div>

@section scripts{
    <script src="~/Content/vue/plugins/brand-selector/brand-selector.js" type="text/javascript"></script>
    <script src="~/Content/vue/plugins/category-selector/category-selector.js" type="text/javascript"></script>
    <script src="~/Content/vue/plugins/store-selector/store-selector.js" type="text/javascript"></script>

    <script>

        var demo = new Vue({
            components: {

            },
            el: '#app',
            data: {

                table: {
                    height: 450,
                    rows: [],
                    args: { productCode: '', productName: '', StoreId: '', brandId: '', categoryId: '', order: '', mark: '', quantity: 0 },
                    page: { total: 0, pageIndex: 1, pageSize: global_config.page.pageSize },

                },
                checkBrandIds: [],


            },
            methods: {
                onPageChange: function (page) {
                    this.table.page.pageIndex = page;
                    this.loadData();
                },
                onPageSizeChange: function (pageSize) {
                    this.table.page.pageSize = pageSize;
                    this.loadData();
                },
                loadData: function () {

                    var _self = this;
                    _self.table.page.pageIndex = 1;
                    _self.table.args.brandId = _self.checkBrandIds.toString();
                    _self.table.args.categoryId = _self.table.args.categoryId.toString();
                    _self.table.args.StoreId = _self.table.args.StoreId.toString();
                    var url = "/StoreInventory/QueryStoreProductPrice";
                    var data = Object.assign({}, _self.table.page, _self.table.args);
                    $.get(url, data, function (result) {
                        if (result.success) {
                            _self.table.rows = result.data;
                            _self.table.page.total = result.total;
                        }
                        else {
                            _self.$message({
                                message: result.error,
                                type: 'error'
                            });
                        }
                    }, "Json");
                },
                Down: function () {
                    //window.location.href = '/StoreInventory/Down?productCodeOrBarCode=' + this.table.args.productCodeOrBarCode + '&StoreId=' + this.table.args.StoreId + '&BrandId=' + this.table.args.brandId
                    //                   + '&CategoryId=' + this.table.args.categoryId;
                    var href = "/StoreInventory/QueryStoreProductPrice?toExcel=true";
                    var parameters = this.table.args;
                    for (var name in parameters) {
                        href += "&" + name + "=" + encodeURIComponent(parameters[name]);
                    }

                    window.location.href = href;

                },

                clearQuery: function () {
                    this.table.args = { productCodeOrBarCode: '', productName: '', StoreId: '', brandId: '', categoryId: '', order: '', mark: '', quantity: 0 };
                    this.$refs.brandtable.onClear();
                },
                onSelectCategory: function (node) {
                    if (node.length > 0) {
                        this.table.args.categoryCode = node[0].Code;
                    }
                }
            },
            created: function () {
                setListPage(this.table, 315);
            },
        })


    </script>
}


