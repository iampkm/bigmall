@using Guoc.BigMall.Application.DTO;
@using Guoc.BigMall.Application.Configuration;
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@section styles{
    <style type="text/css">
        h3.title {
            font-weight: bold;
            padding-bottom: 1px;
            border-bottom: 2px solid;
        }

        .first-row {
            margin-top: 15px;
        }

        .label-col {
            text-align: right;
        }

        .btn-print {
            color: white;
            border-color: #8EBCED;
            background-color: #8EBCED;
        }

            .btn-print:hover {
                color: white;
                border-color: rgba(142,188,237,0.7);
                background-color: rgba(142,188,237,0.7);
            }

        .clear-margin-left {
            margin-left: 0px !important;
        }

        .error-msg {
            color: red;
            font-size: 9pt;
        }
    </style>
}
<div id="app" class="box box-primary">
    <div>
        <el-row v-bind:gutter="20" class="first-row" v-show="false">
            <el-col v-bind:span="5">
                <el-input v-model="AuditedRemark" placeholder="审核意见" clearable></el-input>
            </el-col>
        </el-row>
        <el-row type="flex" style="margin-top:10px;">
            <el-col v-bind:span="5">
                @*<el-input autofocus="true" placeholder="串码扫码" v-model="snCode" prefix-icon="el-icon-tickets" v-on:keyup.enter.native="inputSNCode" clearable>
                        <el-tooltip slot="prepend" content="扫描二维码" placement="right" effect="light">
                            <el-button icon="el-icon-view" v-on:click="batchScanning"></el-button>
                        </el-tooltip>
                    </el-input>*@
                <sncode-selector v-model="snCode" v-bind:search-args="productSearchArgs" v-on:callback="selectProductCallback" v-bind:display-template="'{SNCode}'"></sncode-selector>
            </el-col>
            <el-col v-bind:span="3"></el-col>
            <el-col v-bind:span="8">
                <h3 class="text-center text-danger title">批发销售单</h3>
            </el-col>
        </el-row>
        <el-row v-show="false">
            <el-col v-bind:span="20">门店：{{model.StoreName}}</el-col>
        </el-row>
        <el-row>
            <el-col v-bind:span="6">门店：{{model.StoreName}}</el-col>
            <el-col v-bind:span="6">批发销售单号：{{model.Code}}</el-col>
            <el-col v-bind:span="6">制单日期：{{model.CreatedOnTime}}</el-col>
        </el-row>
        <el-row>
            <el-col v-bind:span="6">单据状态：{{model.StatusName}}</el-col>
            <el-col v-bind:span="6">会员姓名：{{model.Buyer}}</el-col>
            <el-col v-bind:span="6">会员电话：{{model.Phone}}</el-col>
        </el-row>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>序号</th>
                    <th>编码</th>
                    <th>名称</th>
                    <th>应发数量</th>
                    <th>实发数量</th>
                    <th>串号</th>
                    <th>单价</th>
                    <th>金额</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item,index) in model.Items">
                    <td>{{index+1}}</td>
                    <td>{{item.ProductCode}}</td>
                    <td>{{item.ProductName}}</td>
                    <td>{{item.Quantity}}</td>
                    <td style="width:100px;">
                        @*<el-input-number v-model="item.ActualQuantity" placeholder="实发数量" v-bind:precision="0" v-bind:min="1" v-bind:max="item.Quantity"></el-input-number>*@
                        <el-input-number v-model="item.ActualQuantity" v-bind:controls="false" v-bind:precision="0" v-bind:min="1" v-bind:max="item.Quantity" v-if="item.HasSNCode" disabled></el-input-number>
                        <el-input-number v-model="item.ActualQuantity" v-bind:precision="0" v-bind:min="1" v-bind:max="item.Quantity" v-else v-on:change="numberChanged(item, 'ActualQuantity', 1)"></el-input-number>
                    </td>
                    <td style="width:350px">
                        <el-tag v-for="(codeItem,index) in item.snCodeList" v-bind:key="codeItem" v-on:close="removeSNCode(item,index)" disable-transitions="false" closable>{{codeItem}}</el-tag>
                    </td>
                    <td>{{item.RealPrice}}</td>
                    <td>{{item.Amount}}</td>

                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td></td>
                    <td>合计：</td>
                    <td></td>
                    <td>{{model.TotalQuantity}}</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
        <el-row>
            <el-col v-bind:span="6">制单人：{{model.CreatedByName}}</el-col>
            <el-col v-bind:span="6">备注：{{model.Remark}}</el-col>
        </el-row>
    </div>
</div>
@section scripts{
    <script src="~/Content/vue/plugins/sncode-selector/sncode-selector.js"></script>
    <script type="text/javascript">
        var demo = new Vue({
            el: '#app',
            data: {
                totalQuantity:"",
                lock: false,
                lockClearRow: false,
                productSearchArgs:{ storeId: "0" },
                StoreErrorMsg:"",
                ItemMaxSNCodeQuantity:@SystemConfig.ItemMaxSNCodeQuantity,
                model: JsExt.mergeObjectProps(@Html.Raw(ViewBag.BatchSaleOrder),{ Items:[{ snCodeList:[] }] }),
                AuditedRemark:"",
                snCode:"",
                postModel:{Id:0,Code:'',Items:[{ProductId:0,ActualQuantity:0,SNCode:''}]}
            },
            watch:{

            },
            methods: {
                //出库
                stockOut: function (dialog, button,callback) {
                    var $this=this;
                    // var data={OrderCode:this.model.Code};
                    var data = JsExt.map(this.model,this.postModel, true);
                    $.ajax({
                        type: 'post',
                        url: "/BatchSaleOrder/StockOut",
                        data: JSON.stringify(data),
                        dataType: "json",
                        contentType: 'application/json',
                        success: function (result) {
                            if (result.success) {
                                $this.$message.success({
                                    message:"出库成功！",
                                    onClose:function(){
                                        button.unlock();
                                        dialog.close();
                                        if(callback)
                                        {
                                            callback();
                                        }
                                    }
                                });
                            }else {
                                button.unlock();
                                $this.$message.error(result.error);
                            }
                        }
                    });
                },
                //作废
                abandonBatchSaleOrder: function (dialog, button,callback) {
                    var $this=this;
                    var data={OrderCode:this.model.Code};
                    if(this.AuditedRemark=="")
                    {
                        this.$message.error('审核意见不能为空');
                        return;
                    }
                    $.ajax({
                        type: 'post',
                        url: "/BatchSaleOrder/AbandonSaleOrder",
                        data: JSON.stringify(data),
                        dataType: "json",
                        contentType: 'application/json',
                        success: function (result) {
                            if (result.success) {
                                $this.$message.success({
                                    message:"作废成功！",
                                    onClose:function(){
                                        button.unlock();
                                        dialog.close();
                                        if(callback)
                                        {
                                            callback();
                                        }
                                    }
                                });
                            }else {
                                button.unlock();
                                $this.$message.error(result.error);
                            }
                        }
                    });
                },

                selectProductCallback: function(selectedProducts, currentItem){
                    var $this = this;
                    selectedProducts.forEach(function(product){
                        var item=$this.model.Items.first(function(m){ return m.ProductId == product.Id; });
                        if(!item){
                            $this.$message.error("单据中不包含串码{0}对应的商品！".format(product.SNCode));
                            return;
                        }

                        if(item.snCodeList.contains(function(snCode){ return snCode == product.SNCode; })){
                            $this.$message.error("请勿重复录入串码{0}！".format(product.SNCode));
                            return;
                        }

                        if(item.snCodeList.length >= item.Quantity){
                            $this.$message.error("商品{0}串码总数不能超过应发数！".format(item.ProductCode));
                            return;
                        }

                        if(item.snCodeList.length >= $this.ItemMaxSNCodeQuantity){
                            $this.$message.error("商品{0}串码总数不能超过{1}个！".format(item.ProductCode, $this.ItemMaxSNCodeQuantity));
                            return;
                        }

                        item.snCodeList.push(product.SNCode);
                        item.ActualQuantity = item.snCodeList.length;
                        item.SNCode = item.snCodeList.join();
                    });
                    selectedProducts.splice(0, selectedProducts.length);
                },

                removeSNCode: function (item, index) {
                    item.snCodeList.splice(index, 1);
                    item.ActualQuantity = item.snCodeList.length;
                },

                numberChanged:function(item, p, defaultValue){
                    var number = this.validateNumber(item[p], defaultValue);
                    if(item[p] != number) item[p] = number;
                },

                validateNumber: function(value, defaultValue){
                    var number = parseFloat(value);
                    if(number.toString() == "NaN"){
                        return defaultValue;
                    }
                    return number;
                }
            },
            computed:{
                //totalQuantity:function(){
                //    var $this=this;
                //    var totalQty=0;
                //    this.totalAmount=0;
                //    this.model.Items.forEach(function(item,index){
                //        if(!item.Quantity)
                //            item.Quantity = 1;
                //        totalQty += parseInt(item.Quantity);
                //        //操作明细
                //        item.GiftItems.forEach(function(gift,index){
                //            if(!gift.Quantity)
                //                gift.Quantity = 1;
                //            totalQty += parseInt(gift.GiftQuantity);
                //        });
                //        item.Amount = item.Price * item.Quantity;
                //        $this.totalAmount += item.Amount;
                //    });
                //    return totalQty;
                //}
            },
            created:function(){
                var dialog=window.parent.activeDialog;
                if(dialog){
                    dialog.bindEvent("stockOut",this.stockOut);
                }
                //dialog.bindEvent("abandonBatchSaleOrder",this.abandonBatchSaleOrder);
                // this.addRow();

                this.productSearchArgs.storeId = this.model.StoreId;
            }
        });
    </script>
}
